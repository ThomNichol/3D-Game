[gd_scene load_steps=8 format=3 uid="uid://cnv8wlespjhvy"]

[ext_resource type="ArrayMesh" uid="uid://dbtjfv63anngr" path="res://Assets/blasterC.obj" id="1_oqwmx"]

[sub_resource type="GDScript" id="GDScript_m30sj"]
script/source = "extends CharacterBody3D


const SPEED = 5.0
const JUMP_VELOCITY = 4.5
const MOUSE_SENSITIVITY = 0.001
const MOUSE_RANGE = 1.2

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")

func _unhandled_input(event):
	# if the mouse has moved
	if event is InputEventMouseMotion:
		# up-down motion, apply to the $Pivot
		$Pivot.rotate_x(-event.relative.y * MOUSE_SENSITIVITY)
		$Pivot.rotation.x = clamp($Pivot.rotation.x, -MOUSE_RANGE, MOUSE_RANGE)
		rotate_y(-event.relative.x * MOUSE_SENSITIVITY)

func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	# Handle Jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_nijtp"]

[sub_resource type="BoxShape3D" id="BoxShape3D_rgyjk"]
size = Vector3(0.8, 0.2, 0.8)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_y35c2"]
albedo_color = Color(0.133333, 0.133333, 0.133333, 1)
roughness = 0.16
anisotropy = -1.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_msssk"]
albedo_color = Color(0.133333, 0.133333, 0.133333, 1)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_dkitu"]
albedo_color = Color(0.133333, 0.133333, 0.133333, 1)

[node name="Player" type="CharacterBody3D"]
script = SubResource("GDScript_m30sj")

[node name="Body" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.6, 0)
shape = SubResource("CapsuleShape3D_nijtp")

[node name="Feet" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.8, 0)
shape = SubResource("BoxShape3D_rgyjk")

[node name="Pivot" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 0)

[node name="Camera3D" type="Camera3D" parent="Pivot"]
current = true

[node name="Gun" type="MeshInstance3D" parent="Pivot"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.4, -0.2, -0.4)
mesh = ExtResource("1_oqwmx")
surface_material_override/0 = SubResource("StandardMaterial3D_y35c2")
surface_material_override/1 = SubResource("StandardMaterial3D_msssk")
surface_material_override/2 = SubResource("StandardMaterial3D_dkitu")
